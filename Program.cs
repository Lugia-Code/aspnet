using TrackingCodeAPI.configs;
using TrackingCodeApi.handlers;
using TrackingCodeApi.models;
using Microsoft.EntityFrameworkCore;

DotNetEnv.Env.Load();

var builder = WebApplication.CreateBuilder(args);

// ----------- Serviços -----------
ServicesConfigurator.Configure(builder.Services);
builder.Services.AddAuthorization();

// ----------- Build da aplicação -----------
var app = builder.Build();

// ----------- Migração do banco -----------
using (var scope = app.Services.CreateScope())
{
    var db = scope.ServiceProvider.GetRequiredService<TrackingCodeDb>();

    try
    {
        // Cria a tabela "setor" se não existir
        db.Database.ExecuteSqlRaw(@"
BEGIN
    EXECUTE IMMEDIATE 'CREATE TABLE setor (
        id_setor NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
        nome NVARCHAR2(2000) NOT NULL,
        descricao NVARCHAR2(2000),
        coordenadas_limite BINARY_DOUBLE,
        CONSTRAINT PK_setor PRIMARY KEY (id_setor)
    )';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -955 THEN
            RAISE;
        END IF;
END;");

        // Aplica migrations do EF Core (para demais tabelas)
        db.Database.Migrate();

        Console.WriteLine("Tabelas e migrations aplicadas com sucesso.");
    }
    catch (Exception ex)
    {
        Console.WriteLine($"Erro ao aplicar migrations: {ex.Message}");
        throw;
    }
    
}
// ----------- Middleware global -----------
MiddlewareConfigurator.Configure(app);

// ----------- Health Check -----------
app.MapGet("/health", () => Results.Ok(new { status = "Healthy", timestamp = DateTime.UtcNow }));

// ----------- Mapear Handlers -----------
MotoHandler.MapEndpoints(app);
TagHandler.MapEndpoints(app);
SetorHandler.MapEndpoints(app);

// ----------- Swagger Dev -----------
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI(c => c.SwaggerEndpoint("/swagger/v1/swagger.json", "Tracking Code API v1"));
}

// ----------- Outros -----------
app.UseHttpsRedirection();
app.UseAuthorization();

await app.RunAsync();